import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

export default function Home() {
  const [data, setData] = useState(null)
  const [loading, setLoading] = useState(false)
  const [editMode, setEditMode] = useState(false)
  const [configValue, setConfigValue] = useState(null)
  const [submitTime, setSubmitTime] = useState(0)

  useEffect(() => {
    setLoading(true)
    fetch('/api/input')
      .then((res) => res.json())
      .then((data) => {
        setData(data)
        setLoading(false)
        console.log(data)
      })
  }, [submitTime])

  function submitConfig(e) {
    setLoading(true)
    fetch('/api/submit', {
      method: "POST",
      data: configValue
    })
      .then((res) => res.json())
      .then((data) => {
        setSubmitTime(new Date().getTime())
      })
  }

  return (
    <div className="container">
      <Head>
        <title>Shadowsocks config</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h3 className="text-success text-center py-3">
          Shadowsocks input config
        </h3>

        {!loading &&
          <div className="form-check form-switch">
            <input className="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" onClick={() => setEditMode(!editMode)} />
            <label className="form-check-label" htmlFor="flexSwitchCheckDefault">{editMode ? '关闭' : '开启'}编辑</label>
          </div>}
        <hr />

        {!loading && !editMode && (
          <div className="row row-cols-1 row-cols-md-2 g-4">
            {(data?.instances || []).map((instance) => (
              <div className="col" key={instance.instance_name}>
                <div className="card">
                  <div className="card-header">
                    {instance.instance_name}
                  </div>
                  <div className="card-body">
                    <pre className="card-text">
                      {JSON.stringify(instance, null, 4)}
                    </pre>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        {!loading && editMode && (
          <form className="form">
            <div className="mb-3">
              <textarea className="form-control" rows="20"
                defaultValue={JSON.stringify(data, null, 4)}
                onBlur={(e) => setConfigValue(e.target.value)}></textarea>
            </div>
            <button className="btn btn-primary" onClick={submitConfig}>提交</button>
          </form>
        )}
      </main>

      <footer className={styles.footer}>
        Powered by{' '}
        <span className={styles.logo}>
          <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
        </span>
      </footer>
    </div >
  )
}
